# load_agent_env will either create a new agent for a named key
# or recover the existing agent if it exists
# the agent's details live in ~/.ssh/.ssh-agent-$keyname

new_agent() {
    if [ -z "$1" ] ; then
        echo "Usage: new_agent keyname"
        return
    fi

    local KEY=$1
    local FILE=${HOME}/.ssh/.ssh-agent-${KEY}
    ${HOME}/bin/create-ssh-agent-for-key.sh ${KEY} && . ${FILE}
}

load_agent_env() {
    if [ -z "$1" ] ; then
        echo "Usage: load_agent_env keyname"
        return
    fi

    local KEY=$1

    test_agent_env ${KEY}
    local _what=$?

    if [ ${_what} -eq 1 ] ; then
        # no agent - create, load keys
        new_agent $1
        ${HOME}/bin/load-key.sh ${KEY}
    elif [ ${_what} -eq 2 ] ; then
        # agent exists but no keys
        ${HOME}/bin/load-key.sh ${KEY}
    fi

}

test_agent_env() {
    if [ -z "$1" ] ; then
        echo "Usage: test_agent_env keyname"
        return
    fi

    local KEY=$1
    local FILE=${HOME}/.ssh/.ssh-agent-${KEY}

    if [ -f ${FILE} ] ; then
        echo "found ${FILE} for ${KEY}, loading"
        . ${FILE}
        if ! ps -p ${SSH_AGENT_PID} 2>/dev/null | grep -q ssh-agent ; then
            echo "Stale agent details for ${KEY}"
            return 1
        fi
        if ! ssh-add -l ; then
            echo "No keys loaded for ${KEY}"
            return 2
        fi
    else
        echo "No agent details found for ${KEY}"
        return 1
    fi
    return 0
}

# kill_agent kills the agent for a named key
kill_agent() {
    if [ -z "$1" ] ; then
        echo "Usage: kill_agent keyname"
        return
    fi

    local KEY=$1
    local FILE=${HOME}/.ssh/.ssh-agent-${KEY}

    if [ -f ${FILE} ] ; then
        echo "Found ${FILE} for ${KEY}, cleaning up"
        . ${FILE}
        kill ${SSH_AGENT_PID}
        rm ${FILE}
    else
        echo "No agent details found for ${KEY}"
    fi
}

alias la=load_agent_env
alias xsh='ssh-with-lookup.rb'
alias xcp='scp-with-lookup.rb'

# vim: ft=sh
